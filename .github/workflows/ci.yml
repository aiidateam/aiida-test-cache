name: CI

on:
    push:
        branches:
            - main
    pull_request:
env:
    UV_VER: "0.5.6"
    FORCE_COLOR: 1

jobs:

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        aiida-version: ['2.5']
        include:
          - python-version: '3.9'
            aiida-version: '2.0'
      fail-fast: false

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_DB: test_aiida
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up uv
      uses: astral-sh/setup-uv@v4
      with:
        version: ${{ env.UV_VER }}
    - name: Install package
      run: uv pip install --system -e .[tests] aiida-core==${{ matrix.aiida-version }}

    - name: Run test suite
      env:
        # show timings of tests
        PYTEST_ADDOPTS: "--durations=0"
      run: |
        aiida-mock-code || true
        pytest --cov=aiida_test_cache tests/

    - name: Upload coverage report
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        name: pytest-py${{ matrix.python-version }}
        files: ./coverage.xml
        fail_ci_if_error: false  # don't fail job, if coverage upload fails

  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Set up uv
      uses: astral-sh/setup-uv@v4
      with:
        version: ${{ env.UV_VER }}

    - name: Install package
      run: uv pip install --system -e .[pre_commit]

    - name: Run pre-commit
      uses: pre-commit/action@v3.0.1
